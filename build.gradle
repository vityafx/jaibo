apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'application'

group = 'jaibo'
version = '0.3'

description = """Java Advanced IRC BOt"""

sourceCompatibility = 1.6
targetCompatibility = 1.6

buildDir = "target"

mainClassName = "Main"

repositories {

     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
    //compile group: 'org.xerial', name: 'sqlite-jdbc', version:'3.7.2'
    compile 'org.xerial:sqlite-jdbc:3.7.2'
}

task copyTask(type: Copy) {

    println 'Copying configuration files and distribution files...'

    ['target/classes/', 'target/libs'].each { dest ->
        copy {
            with from ('src/main/java/') {
                include '*.ini'
            }
            into dest
        }
    }

    from (rootProject.rootDir) {
        include 'README.md'
        include 'LICENSE'
        include 'CHANGELOG'

        include '*.sh'
    }
    into 'target/libs'
}

task copyDependenciesToTarget(type: Copy) {
    println 'Copying dependencies to target files...'

    configurations.compile.collect().each { compileDependency ->
        copy {
            with from (compileDependency.getPath()) {
                include '*'
            }
            into 'target/libs'
        }
    }
}

compileJava.dependsOn(copyTask)
build.dependsOn(copyDependenciesToTarget)

jar {
    manifest.attributes(
            "Main-Class": "Main",
            "Class-Path": configurations.compile.collect { it.getName()}.join(' ')
    )
}

/* Overwriting distribution tasks: */
task distZip(type:Zip, overwrite:true) {
    archiveName = "$project.name-$version" + '.zip'
    from "target/libs"
}

task distTar(type:Tar, overwrite:true) {
    archiveName = "$project.name-$version" + '.tar'
    from "target/libs"
}